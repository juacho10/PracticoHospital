extends ../layout

block content
  .card.shadow
    .card-header.bg-primary.text-white
      h3.mb-0
        i.fas.fa-user-plus.me-2
        | Registrar Paciente para Admisión
    
    .card-body
      form(method="POST", action="/admission/register", id="admissionForm")
        .row.mb-4
          .col-md-6
            h5
              i.fas.fa-user-circle.me-2
              | Datos del Paciente
          .col-md-6.text-end
            button.btn.btn-sm.btn-outline-secondary(type="button", id="searchPatientBtn")
              i.fas.fa-search.me-1
              | Buscar paciente existente
        
        #patientSearchContainer.mb-4.d-none
          .card.card-body.mb-3
            .input-group
              input.form-control(type="text", placeholder="Ingrese DNI del paciente", id="patientSearchInput")
              button.btn.btn-primary(type="button", id="patientSearchBtn") Buscar
            #patientSearchResults.mt-3
        
        .row.g-3
          .col-md-6
            .form-floating
              input.form-control(type="text", id="dni", name="dni", required, value=formData ? formData.dni : '')
              label(for="dni") DNI *
          
          .col-md-6
            .form-floating
              input.form-control(type="text", id="first_name", name="first_name", required, value=formData ? formData.first_name : '')
              label(for="first_name") Nombre *
          
          .col-md-6
            .form-floating
              input.form-control(type="text", id="last_name", name="last_name", required, value=formData ? formData.last_name : '')
              label(for="last_name") Apellido *
          
          .col-md-3
            .form-floating
              input.form-control(type="date", id="birth_date", name="birth_date", required, value=formData ? formData.birth_date : '')
              label(for="birth_date") Fecha Nacimiento *
          
          .col-md-3
            .form-floating
              select.form-select(id="gender", name="gender", required)
                option(value="") Seleccione...
                option(value="M", selected=formData && formData.gender === 'M') Masculino
                option(value="F", selected=formData && formData.gender === 'F') Femenino
                option(value="O", selected=formData && formData.gender === 'O') Otro
              label(for="gender") Género *
        
        hr.my-4
        
        h5.mb-3
          i.fas.fa-address-card.me-2
          | Información de Contacto
        
        .row.g-3
          .col-md-8
            .form-floating
              input.form-control(type="text", id="address", name="address", value=formData ? formData.address : '')
              label(for="address") Dirección
          
          .col-md-4
            .form-floating
              input.form-control(type="text", id="phone", name="phone", value=formData ? formData.phone : '')
              label(for="phone") Teléfono
          
          .col-md-6
            .form-floating
              input.form-control(type="email", id="email", name="email", value=formData ? formData.email : '')
              label(for="email") Email
          
          .col-md-6
            .form-floating
    select.form-select(id="insurance", name="insurance")
      option(value="") Seleccione seguro...
      option(value="OSDE") OSDE
      option(value="Swiss Medical") Swiss Medical
      option(value="Galeno") Galeno
      option(value="Medifé") Medifé
      option(value="Omint") DOSEP 
      option(value="Particular") Particular
      option(value="Otro") Otro
    label(for="insurance") Seguro Médico
        
        hr.my-4
        
        h5.mb-3
          i.fas.fa-procedures.me-2
          | Datos de Admisión
        
        .row.g-3
          .col-md-4
            .form-floating
              select.form-select(id="admission_type", name="admission_type", required)
                option(value="") Seleccione tipo...
                each type in admissionTypes
                  option(value=type, selected=formData && formData.admission_type === type)= type.charAt(0).toUpperCase() + type.slice(1)
              label(for="admission_type") Tipo de Admisión *
          
          .col-md-8
            .form-floating
              input.form-control(type="text", id="referring_doctor", name="referring_doctor", value=formData ? formData.referring_doctor : '')
              label(for="referring_doctor") Médico Referente
        
          .col-12
            .form-floating
              textarea.form-control(id="reason", name="reason", style="height: 100px", required)= formData ? formData.reason : ''
              label(for="reason") Motivo de Admisión *
        
        .d-grid.gap-2.d-md-flex.justify-content-md-end.mt-4
          button.btn.btn-secondary.me-md-2(type="button", onclick="history.back()")
            i.fas.fa-arrow-left.me-1
            | Cancelar
          button.btn.btn-primary(type="submit")
            i.fas.fa-save.me-1
            | Registrar Paciente

block scripts
  script.
    document.addEventListener('DOMContentLoaded', function() {
      // Toggle búsqueda de paciente
      const searchPatientBtn = document.getElementById('searchPatientBtn');
      const patientSearchContainer = document.getElementById('patientSearchContainer');
      
      searchPatientBtn.addEventListener('click', function() {
        patientSearchContainer.classList.toggle('d-none');
      });
      
      // Búsqueda de paciente existente
      const patientSearchBtn = document.getElementById('patientSearchBtn');
      const patientSearchInput = document.getElementById('patientSearchInput');
      const patientSearchResults = document.getElementById('patientSearchResults');
      
      patientSearchBtn.addEventListener('click', async function() {
        const dni = patientSearchInput.value.trim();
        
        if (!dni) {
          patientSearchResults.innerHTML = `
            <div class="alert alert-warning">
              <i class="fas fa-exclamation-triangle me-2"></i>
              Por favor ingrese un DNI para buscar
            </div>
          `;
          return;
        }
        
        try {
          const response = await fetch(`/api/patients/search?dni=${dni}`);
          const data = await response.json();
          
          if (data.error) {
            patientSearchResults.innerHTML = `
              <div class="alert alert-danger">
                <i class="fas fa-times-circle me-2"></i>
                ${data.error}
              </div>
            `;
          } else if (data.patient) {
            // Autocompletar formulario con datos del paciente encontrado
            document.getElementById('dni').value = data.patient.dni;
            document.getElementById('first_name').value = data.patient.first_name;
            document.getElementById('last_name').value = data.patient.last_name;
            document.getElementById('birth_date').value = data.patient.birth_date.split('T')[0];
            document.getElementById('gender').value = data.patient.gender;
            document.getElementById('address').value = data.patient.address || '';
            document.getElementById('phone').value = data.patient.phone || '';
            document.getElementById('email').value = data.patient.email || '';
            document.getElementById('insurance').value = data.patient.insurance || '';
            
            patientSearchResults.innerHTML = `
              <div class="alert alert-success">
                <i class="fas fa-check-circle me-2"></i>
                Paciente encontrado: <strong>${data.patient.last_name}, ${data.patient.first_name}</strong>
                <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
            `;
          } else {
            patientSearchResults.innerHTML = `
              <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>
                No se encontró un paciente con ese DNI. Complete los datos manualmente.
              </div>
            `;
          }
        } catch (error) {
          console.error('Error al buscar paciente:', error);
          patientSearchResults.innerHTML = `
            <div class="alert alert-danger">
              <i class="fas fa-times-circle me-2"></i>
              Error al buscar paciente. Intente nuevamente.
            </div>
          `;
        }
      });
      
      // Validación de formulario
      const admissionForm = document.getElementById('admissionForm');
      
      admissionForm.addEventListener('submit', function(e) {
        let isValid = true;
        const requiredFields = admissionForm.querySelectorAll('[required]');
        
        requiredFields.forEach(field => {
          if (!field.value.trim()) {
            field.classList.add('is-invalid');
            isValid = false;
          } else {
            field.classList.remove('is-invalid');
          }
        });
        
        if (!isValid) {
          e.preventDefault();
          
          const firstInvalidField = admissionForm.querySelector('.is-invalid');
          if (firstInvalidField) {
            firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
            firstInvalidField.focus();
          }
          
          // Mostrar alerta general
          const existingAlert = admissionForm.querySelector('.alert.alert-danger');
          if (!existingAlert) {
            const alert = document.createElement('div');
            alert.className = 'alert alert-danger mt-3';
            alert.innerHTML = `
              <i class="fas fa-exclamation-triangle me-2"></i>
              Por favor complete todos los campos obligatorios marcados con *
            `;
            admissionForm.prepend(alert);
            
            setTimeout(() => alert.remove(), 5000);
          }
        }
      });
    });